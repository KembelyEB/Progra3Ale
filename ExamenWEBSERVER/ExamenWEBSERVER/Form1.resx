<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/2wBD
        AAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0M
        DgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAz/wAARCABrAKsDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD8
        J5CpnO3PTuBSonOaUxqT0pduO1NGY8SbYWX1Oc/5/pg+9EMbGIybT5YOwsOit6H34P5U0I2M7eKcqjCn
        +JRgZOcCt4yVgHbvkA/vZFOQbRSAAhfm6HJFKqF88mrAkgkeKTKlk4GcDqD1H9CO9SPK0029hGrMeRGu
        1R9B2FTIsc42yzJECRsYKWVSWGScHIXGScBjnAwcGoxCrRllO4KcZxjJ+lJSTAMqPvMVGMk9cD1x1/Kn
        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
</value>
  </data>
</root>